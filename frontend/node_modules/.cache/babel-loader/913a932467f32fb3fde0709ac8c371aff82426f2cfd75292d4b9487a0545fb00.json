{"ast":null,"code":"class ApiAuth {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n  register(email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password,\n        email\n      })\n    }).then(this._checkResponse);\n  }\n  login(email, password) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password,\n        email\n      })\n    }).then(this._checkResponse);\n  }\n  checkToken(jwt) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        ...this._headers,\n        \"Authorization\": `Bearer ${jwt}`\n      }\n    }).then(this._checkResponse);\n  }\n}\nconst apiAuth = new ApiAuth({\n  baseUrl: 'https://auth.nomoreparties.co',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default apiAuth;","map":{"version":3,"names":["ApiAuth","constructor","options","_baseUrl","baseUrl","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","body","JSON","stringify","then","login","checkToken","jwt","apiAuth"],"sources":["/Users/mihailpestov/Desktop/dev/react-mesto-auth/src/utils/ApiAuth.js"],"sourcesContent":["class ApiAuth {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        } else {\n            return Promise.reject(`Ошибка: ${res.status}`);\n        }\n    }\n\n    register(email, password ) {\n        return fetch(`${this._baseUrl}/signup`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({ password, email })\n        })\n            .then(this._checkResponse);\n    }\n\n    login(email, password) {\n        return fetch(`${this._baseUrl}/signin`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({ password, email })\n        })\n            .then(this._checkResponse);\n    }\n\n    checkToken(jwt) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: \"GET\",\n            headers: {\n                ...this._headers,\n                \"Authorization\": `Bearer ${jwt}`\n            }\n        })\n            .then(this._checkResponse);\n    }\n}\n\nconst apiAuth = new ApiAuth(\n    {\n        baseUrl: 'https://auth.nomoreparties.co',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n);\n\nexport default apiAuth;"],"mappings":"AAAA,MAAMA,OAAO,CAAC;EACVC,WAAW,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,QAAQ,GAAGD,OAAO,CAACE,OAAO;IAC/B,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACI,OAAO;EACnC;EAEAC,cAAc,CAACC,GAAG,EAAE;IAChB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACR,OAAOD,GAAG,CAACE,IAAI,EAAE;IACrB,CAAC,MAAM;MACH,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;IAClD;EACJ;EAEAC,QAAQ,CAACC,KAAK,EAAEC,QAAQ,EAAG;IACvB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACd,QAAS,SAAQ,EAAE;MACpCe,MAAM,EAAE,MAAM;MACdZ,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL,QAAQ;QAAED;MAAM,CAAC;IAC5C,CAAC,CAAC,CACGO,IAAI,CAAC,IAAI,CAACf,cAAc,CAAC;EAClC;EAEAgB,KAAK,CAACR,KAAK,EAAEC,QAAQ,EAAE;IACnB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACd,QAAS,SAAQ,EAAE;MACpCe,MAAM,EAAE,MAAM;MACdZ,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL,QAAQ;QAAED;MAAM,CAAC;IAC5C,CAAC,CAAC,CACGO,IAAI,CAAC,IAAI,CAACf,cAAc,CAAC;EAClC;EAEAiB,UAAU,CAACC,GAAG,EAAE;IACZ,OAAOR,KAAK,CAAE,GAAE,IAAI,CAACd,QAAS,WAAU,EAAE;MACtCe,MAAM,EAAE,KAAK;MACbZ,OAAO,EAAE;QACL,GAAG,IAAI,CAACD,QAAQ;QAChB,eAAe,EAAG,UAASoB,GAAI;MACnC;IACJ,CAAC,CAAC,CACGH,IAAI,CAAC,IAAI,CAACf,cAAc,CAAC;EAClC;AACJ;AAEA,MAAMmB,OAAO,GAAG,IAAI1B,OAAO,CACvB;EACII,OAAO,EAAE,+BAA+B;EACxCE,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CACJ;AAED,eAAeoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}